{"version":3,"sources":["worker.js"],"names":["cacheKey","clearCache","caches","keys","then","filter","key","forEach","delete","self","clients","claim","saveCache","event","open","cache","fetch","request","response","put","clone","getCache","match","cachedResponse","addEventListener","waitUntil","mode","respondWith"],"mappings":";AACA,MAAMA,EAAW,uBAEXC,EAAa,IAAMC,OAAOC,OAC7BC,KAAKD,GAAQA,EAAKE,OAAOC,GAAOA,IAAQN,IACxCI,KAAKD,GAAQA,EAAKI,QAAQD,GAAOJ,OAAOM,OAAOF,KAC/CF,KAAK,IAAMK,KAAKC,QAAQC,SAErBC,EAAYC,GAASX,OAAOY,KAAKd,GACpCI,KAAKW,GAASC,MAAMH,EAAMI,SACxBb,KAAKc,GAAYH,EAAMI,IAAIN,EAAMI,QAASC,EAASE,SACjDhB,KAAK,IAAMc,KAEZG,EAAWR,GAASX,OAAOoB,MAAMT,EAAMI,SAC1Cb,KAAKmB,GACAA,GAGGX,EAAUC,IAGrBJ,KAAKe,iBAAiB,WAAYX,IAChCA,EAAMY,UAAUxB,OAIhBQ,KAAKe,iBAAiB,QAASX,IACD,mBAAxBA,EAAMI,QAAQF,OAAqD,gBAAvBF,EAAMI,QAAQS,MAC9Db,EAAMc,YAAYN,EAASR","file":"worker.js","sourceRoot":"../src","sourcesContent":["/* global self, caches, fetch */\nconst cacheKey = '98f76e0d3561c373fe3e'\n\nconst clearCache = () => caches.keys()\n  .then(keys => keys.filter(key => key !== cacheKey))\n  .then(keys => keys.forEach(key => caches.delete(key)))\n  .then(() => self.clients.claim())\n\nconst saveCache = event => caches.open(cacheKey)\n  .then(cache => fetch(event.request)\n    .then(response => cache.put(event.request, response.clone())\n      .then(() => response)))\n\nconst getCache = event => caches.match(event.request)\n  .then(cachedResponse => {\n    if (cachedResponse) {\n      return cachedResponse\n    }\n    return saveCache(event)\n  })\n\nself.addEventListener('activate', event => {\n  event.waitUntil(clearCache())\n})\n\nif (process.env.NODE_ENV === 'production') {\n  self.addEventListener('fetch', event => {\n    if (event.request.cache === 'only-if-cached' && event.request.mode !== 'same-origin') return\n    event.respondWith(getCache(event))\n  })\n}\n\n\n"]}